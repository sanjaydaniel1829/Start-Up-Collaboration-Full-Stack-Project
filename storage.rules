rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check file size (max 5MB)
    function isValidSize() {
      return request.resource.size <= 5 * 1024 * 1024;
    }
    
    // Helper function to check if the file is an image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }

    // Profile pictures
    match /users/{userId}/profile.{extension} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        request.auth.uid == userId && 
        isValidSize() && 
        isImage();
    }

    // Story images
    match /stories/{userId}/{storyId}.{extension} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        request.auth.uid == userId && 
        isValidSize() && 
        isImage();
    }

    // Post images
    match /posts/{userId}/{postId}.{extension} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        request.auth.uid == userId && 
        isValidSize() && 
        isImage();
    }
  }
}
